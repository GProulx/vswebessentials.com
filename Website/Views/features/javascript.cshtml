@{
    Page.Title = "JavaScript";
    Page.Keywords = "js, script, region, minify, javascript";
    Page.Description = "Writing JavaScript is so much better with Web Essentials";
    Layout = "~/Views/_LayoutFilter.cshtml";
}

@section highlight {
    <div class="alert alert-info">
        <p>Some of the JavaScript features also apply to TypeScript.</p>
    </div>
}
<header class="section-header">
    <h2><span>Features</span></h2>
</header>
<div class="row">
    <div class="col-md-6">
        <article id="jshint" class="panel panel-default" data-version="WE2012, WE2013">
            <h3 class="panel-heading">
                <a href="#jshint">
                    <span class="fa fa-link"></span>
                </a>
                JSHint
            </h3>
            <div class="panel-body">
                <p>
                    JSHint is a really good way of making sure your JavaScript follows certain coding
                    guidelines and best practices. The default settings are very relaxed, but you can
                    turn on more rules through the new options dialog.
                </p>
                <img src="/images/js/jshint.png" alt="JSHint" width="358" height="144" />
                <p>
                    The error window updates as you type, so you don’t have to right-click the .js file to kick off JSHint. It happens as you write.
                </p>
                <p>
                    Each indiviual JavaScript file can override the global settings by using the official
                    JSHint comment format descripted in the <a href="http://www.jshint.com/docs/">JSHint documentation</a>.
                </p>
            </div>
        </article>
        <article id="jshint-files" class="panel panel-default" data-version="WE2013">
            <h3 class="panel-heading">
                <a href="#jshint-files">
                    <span class="fa fa-link"></span>
                </a>
                .jshintrc and .jshintignore
            </h3>
            <div class="panel-body">
                <p>
                    These two files are fully supported and will be automatically applied when found.
                </p>
            </div>
        </article>
        <article id="regions" class="panel panel-default" data-version="WE2012, WE2013">
            <h3 class="panel-heading">
                <a href="#regions">
                    <span class="fa fa-link"></span>
                </a>
                Regions
            </h3>
            <div class="panel-body">
                <p>
                    Some people hate them, other people love them. This is a feature that was in the
                    original Web Essentials 2010 and by popular request now made it in the 2012 version.
                </p>
                <img src="/images/js/regions.png" alt="JavaScript regions" width="231" height="160" />
            </div>
        </article>
        <article id="outlining" class="panel panel-default" data-version="WE2012, WE2013">
            <h3 class="panel-heading">
                <a href="#outlining">
                    <span class="fa fa-link"></span>
                </a>
                Outlining/code folding
            </h3>
            <div class="panel-body">
                <p>
                    Only functions provide outlining support by Visual Studio 2012. Web Essentials adds
                    outlining supports to any scope including multiline arrays.
                </p>
            </div>
        </article>
    </div>
    <div class="col-md-6">
        <article id="minification" class="panel panel-default" data-version="WE2012, WE2013">
            <h3 class="panel-heading">
                <a href="#minification">
                    <span class="fa fa-link"></span>
                </a>
                Minification
            </h3>
            <div class="panel-body">
                <p>
                    Right-click any JS file in Solution Explorer to produce a *.min.js file. Whenever the source .js file is changed, the .min.js file is updated accordingly.
                </p>
            </div>
        </article>
        <article id="source-maps" class="panel panel-default" data-version="WE2012, WE2013">
            <h3 class="panel-heading">
                <a href="#source-maps">
                    <span class="fa fa-link"></span>
                </a>
                Source Maps
            </h3>
            <div class="panel-body">
                <p>
                    When minifying, Source Map (.js.map) files are automatically generated by enabling it in Tools -> Options.
                </p>
            </div>
        </article>
        <article id="auto-complete" class="panel panel-default" data-version="WE2012, VS2013">
            <h3 class="panel-heading">
                <a href="#auto-complete">
                    <span class="fa fa-link"></span>
                </a>
                Auto-complete braces
            </h3>
            <div class="panel-body">
                <p>
                    When an opening curly brace, square bracket or parenthesis is typed, the closing ditto
                    is inserted to the right of the cursor. Type-through is supported to not mess with muscle memory.
                </p>
            </div>
        </article>
        <article id="indent" class="panel panel-default" data-version="WE2012, VS2013">
            <h3 class="panel-heading">
                <a href="#indent">
                    <span class="fa fa-link"></span>
                </a>
                Smarter indent
            </h3>
            <div class="panel-body">
                <p>
                    Hitting Enter when the cursor is between an opening and closing curly brace now places the
                    cursor correctly on the line below with the correct indentation.
                </p>
            </div>
        </article>

        <article id="references" class="panel panel-default" data-version="WE2013">
            <h3 class="panel-heading">
                <a href="#references">
                    <span class="fa fa-link"></span>
                </a>
                Find All References
            </h3>
            <div class="panel-body">
                <p>
                    Use <mark>Shift+F12</mark> to see all references of any particular JavaScript identifier.
                </p>
            </div>
        </article>
        <article id="definition" class="panel panel-default" data-version="WE2013">
            <h3 class="panel-heading">
                <a href="#definition">
                    <span class="fa fa-link"></span>
                </a>
                Go To Definition
            </h3>
            <div class="panel-body">
                <p>
                    Go To Definition is built in to VS2012 and VS2013.
                    This feature makes the feature work with <code>/// &lt;reference&gt;</code> constructs
                </p>
            </div>
        </article>
    </div>
</div>

<!-- / -->

<header class="section-header" data-version="WE2013">
    <h2><span>Intellisense</span></h2>
</header>
<div class="row">
    <div class="col-md-6">
        <article id="getElementById" class="panel panel-default" data-version="WE2013">
            <h3 class="panel-heading">
                <a href="#getElementById">
                    <span class="fa fa-link"></span>
                </a>
                getElementById
            </h3>
            <div class="panel-body">
                <p>Finds #ID references in all stylesheets in the project and provide Intellisense for them in JavaScript.</p>
            </div>
        </article>
        <article id="getElementsByTagName" class="panel panel-default" data-version="WE2013">
            <h3 class="panel-heading">
                <a href="#getElementsByTagName">
                    <span class="fa fa-link"></span>
                </a>
                getElementsByTagName
            </h3>
            <div class="panel-body">
                <p>Intellisense for all HTML elements supported by the VS HTML editor.</p>
            </div>
        </article>
        <article id="getElementsByClassName" class="panel panel-default" data-version="WE2013">
            <h3 class="panel-heading">
                <a href="#getElementsByClassName">
                    <span class="fa fa-link"></span>
                </a>
                getElementsByClassName
            </h3>
            <div class="panel-body">
                <p>Finds <code>.classnames</code> in all stylesheets in the project and provide Intellisense for them in JavaScript.</p>
            </div>
        </article>
    </div>
    <div class="col-md-6">
        <article id="strict" class="panel panel-default" data-version="WE2013">
            <h3 class="panel-heading">
                <a href="#strict">
                    <span class="fa fa-link"></span>
                </a>
                "use strict"
            </h3>
            <div class="panel-body">
                <p>Get Intellisense for <code>"use strict"</code> as well as <code>"use asm"</code>.</p>
            </div>
        </article>
        <article id="nodejs" class="panel panel-default" data-version="WE2013">
            <h3 class="panel-heading">
                <a href="#nodejs">
                    <span class="fa fa-link"></span>
                </a>
                NodeJS modules
            </h3>
            <div class="panel-body">
                <p>Get Intellisense referencing NodeJS modules.</p>
            </div>
        </article>
    </div>
</div>
